From 4f5428556e295e8acd5a4cc66f671d16ca57dcaf Mon Sep 17 00:00:00 2001
From: Eric Squires <eric.squires@gtri.gatech.edu>
Date: Thu, 9 Jul 2020 10:32:50 -0400
Subject: [PATCH] adjust output so it is easier to parse with neomake

---
 Source/Core/src/ca/uqac/lif/textidote/Main.java  |  8 ++++----
 .../src/ca/uqac/lif/textidote/as/Position.java   |  2 +-
 .../Core/src/ca/uqac/lif/textidote/as/Range.java |  2 +-
 .../lif/textidote/render/AnsiAdviceRenderer.java | 16 ++++++++--------
 4 files changed, 14 insertions(+), 14 deletions(-)

diff --git a/Source/Core/src/ca/uqac/lif/textidote/Main.java b/Source/Core/src/ca/uqac/lif/textidote/Main.java
index 5f3f7b5..c456b53 100644
--- a/Source/Core/src/ca/uqac/lif/textidote/Main.java
+++ b/Source/Core/src/ca/uqac/lif/textidote/Main.java
@@ -291,7 +291,7 @@ public class Main
 				stderr.println("Using N-grams from " + ngram_dir);
 			}
 		}
-		printGreeting(stderr);
+		// printGreeting(stderr);
 		if (map.hasOption("help"))
 		{
 			cli_parser.printHelp("Usage: " + app_name + " [options] file1 [file2 ...]", stderr);
@@ -667,9 +667,9 @@ public class Main
 			return -1;
 		}
 		long end_time = System.currentTimeMillis();
-		stderr.println("Found " + num_advice + " warning(s)");
-		stderr.println("Total analysis time: " + ((end_time - start_time) / 1000) + " second(s)");
-		stderr.println();
+		// stderr.println("Found " + num_advice + " warning(s)");
+		// stderr.println("Total analysis time: " + ((end_time - start_time) / 1000) + " second(s)");
+		// stderr.println();
 
 		// Render all the advice
 		renderer.render();
diff --git a/Source/Core/src/ca/uqac/lif/textidote/as/Position.java b/Source/Core/src/ca/uqac/lif/textidote/as/Position.java
index 789f00d..000a411 100644
--- a/Source/Core/src/ca/uqac/lif/textidote/as/Position.java
+++ b/Source/Core/src/ca/uqac/lif/textidote/as/Position.java
@@ -68,7 +68,7 @@ public class Position implements Comparable<Position>
 	@Override
 	public String toString()
 	{
-		return "L" + (m_line + 1) + "C" + (m_column + 1);
+		return (Integer.toString(m_line + 1));
 	}
 
 	@Override
diff --git a/Source/Core/src/ca/uqac/lif/textidote/as/Range.java b/Source/Core/src/ca/uqac/lif/textidote/as/Range.java
index 5933ee8..b4a49ef 100644
--- a/Source/Core/src/ca/uqac/lif/textidote/as/Range.java
+++ b/Source/Core/src/ca/uqac/lif/textidote/as/Range.java
@@ -109,7 +109,7 @@ public class Range implements Comparable<Range>
 	@Override
 	/*@ pure non_null @*/ public String toString()
 	{
-		return m_start + "-" + m_end;
+		return m_start.toString();
 	}
 	
 	/**
diff --git a/Source/Core/src/ca/uqac/lif/textidote/render/AnsiAdviceRenderer.java b/Source/Core/src/ca/uqac/lif/textidote/render/AnsiAdviceRenderer.java
index d19f9fa..66d0f0e 100644
--- a/Source/Core/src/ca/uqac/lif/textidote/render/AnsiAdviceRenderer.java
+++ b/Source/Core/src/ca/uqac/lif/textidote/render/AnsiAdviceRenderer.java
@@ -72,20 +72,20 @@ public class AnsiAdviceRenderer extends AdviceRenderer
 				{
 					m_printer.print("* ");
 				}
-				m_printer.println("Everything is OK!");
+				// m_printer.println("Everything is OK!");
 			}
 			else
 			{
 				for (Advice ad : list)
 				{
 					m_printer.setForegroundColor(Color.YELLOW);
-					m_printer.print("* " + ad.getRange());
+					m_printer.print(ad.getResource() + ":" + ad.getRange());
 					m_printer.resetColors();
-					m_printer.print(" ");
-					wrap(ad.getMessage() + " [" + ad.getRule().getName() + "]", "  ", ad.getRange().toString().length() + 2);
-					m_printer.println();
-					m_printer.setForegroundColor(Color.WHITE);
-					renderExcerpt(ad.getLine(), ad.getRange());
+					m_printer.print(":");
+					wrap(ad.getMessage() + " bar [" + ad.getRule().getName() + "]", "  ", ad.getRange().toString().length() + 2);
+					// m_printer.println();
+					// m_printer.setForegroundColor(Color.WHITE);
+					// renderExcerpt(ad.getLine(), ad.getRange());
 				}
 			}
 		}
@@ -184,4 +184,4 @@ public class AnsiAdviceRenderer extends AdviceRenderer
 			}
 		}
 	}
-}
\ No newline at end of file
+}
-- 
2.17.1

